:mod:`pymor.core.config`
========================

.. py:module:: pymor.core.config


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   pymor.core.config.Config



Functions
~~~~~~~~~

.. autoapisummary::
  :nosignatures:

   pymor.core.config._can_import
   pymor.core.config._get_dunegdt_version
   pymor.core.config._get_fenics_version
   pymor.core.config._get_ipython_version
   pymor.core.config._get_matplotib_version
   pymor.core.config._get_qt_version
   pymor.core.config._get_slycot_version
   pymor.core.config.is_jupyter
   pymor.core.config.is_macos_platform
   pymor.core.config.is_nbconvert
   pymor.core.config.is_windows_platform



Attributes
~~~~~~~~~~

.. autoapisummary::

   pymor.core.config._PACKAGES
   pymor.core.config.config


.. py:class:: Config





   .. admonition:: Methods
      :class: admoition-methods

      .. autoapisummary::
         :nosignatures:

         pymor.core.config.Config.__dir__
         pymor.core.config.Config.__getattr__
         pymor.core.config.Config.__repr__
         pymor.core.config.Config.require
         pymor.core.config.Config.version



   .. py:method:: __dir__(self, old=False)

      Default dir() implementation.


   .. py:method:: __getattr__(self, name)


   .. py:method:: __repr__(self)

      Return repr(self).


   .. py:method:: require(self, dependency)


   .. py:method:: version(self)
      :property:



.. py:data:: _PACKAGES
   

   

.. py:function:: _can_import(module)


.. py:function:: _get_dunegdt_version()


.. py:function:: _get_fenics_version()


.. py:function:: _get_ipython_version()


.. py:function:: _get_matplotib_version()


.. py:function:: _get_qt_version()


.. py:function:: _get_slycot_version()


.. py:data:: config
   

   

.. py:function:: is_jupyter()

   Check if we believe to be running in a Jupyter Notebook or Lab.

   This method is not foolproof and might fail with any given Jupyter release.


.. py:function:: is_macos_platform()


.. py:function:: is_nbconvert()

   Check if a notebook is executed with `nbconvert`.

   In some visualization cases we need to be able to detect if a notebook
   is executed with `nbconvert` to disable async loading.


.. py:function:: is_windows_platform()


