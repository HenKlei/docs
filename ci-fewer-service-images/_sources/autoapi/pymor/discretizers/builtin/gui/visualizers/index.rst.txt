:mod:`pymor.discretizers.builtin.gui.visualizers`
=================================================

.. py:module:: pymor.discretizers.builtin.gui.visualizers


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   pymor.discretizers.builtin.gui.visualizers.PatchVisualizer
   pymor.discretizers.builtin.gui.visualizers.OnedVisualizer




.. class:: PatchVisualizer(grid, bounding_box=([0, 0], [1, 1]), codim=2, backend=None, block=False)


   Bases: :py:obj:`pymor.core.base.ImmutableObject`

   Visualize scalar data associated to a two-dimensional |Grid| as a patch plot.

   The grid's |ReferenceElement| must be the triangle or square. The data can either
   be attached to the faces or vertices of the grid.

   .. admonition:: Parameters

       grid
           The underlying |Grid|.
       bounding_box
           A bounding box in which the grid is contained.
       codim
           The codimension of the entities the data in `U` is attached to (either 0 or 2).
       backend
           Plot backend to use ('gl', 'matplotlib', 'jupyter').
       block
           If `True`, block execution until the plot window is closed.
           

   .. method:: visualize(self, U, m, title=None, legend=None, separate_colorbars=False, rescale_colorbars=False, block=None, filename=None, columns=2)

      Visualize the provided data.

      .. admonition:: Parameters

          U
              |VectorArray| of the data to visualize. If `len(U) > 1`, the data is visualized
              as a time series of plots. Alternatively, a tuple of |VectorArrays| can be
              provided, in which case a subplot is created for each entry of the tuple. The
              lengths of all arrays have to agree.
          m
              Filled in by :meth:`pymor.models.interface.Model.visualize` (ignored).
          title
              Title of the plot.
          legend
              Description of the data that is plotted. Most useful if `U` is a tuple in which
              case `legend` has to be a tuple of strings of the same length.
          separate_colorbars
              If `True`, use separate colorbars for each subplot.
          rescale_colorbars
              If `True`, rescale colorbars to data in each frame.
          block
              If `True`, block execution until the plot window is closed. If `None`, use the
              default provided during instantiation.
          filename
              If specified, write the data to a VTK-file using
              :func:`~pymor.discretizers.builtin.grids.vtkio.write_vtk` instead of displaying it.
          columns
              The number of columns in the visualizer GUI in case multiple plots are displayed
              at the same time.
              



.. class:: OnedVisualizer(grid, codim=1, block=False, backend=None)


   Bases: :py:obj:`pymor.core.base.ImmutableObject`

   Visualize scalar data associated to a one-dimensional |Grid| as a plot.

   The grid's |ReferenceElement| must be the line. The data can either
   be attached to the subintervals or vertices of the grid.

   .. admonition:: Parameters

       grid
           The underlying |Grid|.
       codim
           The codimension of the entities the data in `U` is attached to (either 0 or 1).
       block
           If `True`, block execution until the plot window is closed.
           

   .. method:: visualize(self, U, m, title=None, legend=None, separate_plots=True, separate_axes=False, block=None, filename=None, columns=2)

      Visualize the provided data.

      .. admonition:: Parameters

          U
              |VectorArray| of the data to visualize. If `len(U) > 1`, the data is visualized
              as a time series of plots. Alternatively, a tuple of |VectorArrays| can be
              provided, in which case several plots are made into the same axes. The
              lengths of all arrays have to agree.
          m
              Filled in by :meth:`pymor.models.interface.Model.visualize` (ignored).
          title
              Title of the plot.
          legend
              Description of the data that is plotted. Most useful if `U` is a tuple in which
              case `legend` has to be a tuple of strings of the same length.
          block
              If `True`, block execution until the plot window is closed. If `None`, use the
              default provided during instantiation.
              



